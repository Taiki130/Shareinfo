version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.5-node-browsers
        environment:
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
          DB_USERNAME: 'root'
          DB_PASSWORD: 'ramadan'
          MYSQL_ROOT_PASSWORD: 'ramadan'
      - image: circleci/mysql:5.7
        environment:
          MYSQL_USER: 'root'
          MYSQL_ROOT_PASSWORD: 'ramadan'
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load


  build_image:
    docker:
      - image: docker:18.09.0
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: install aws cli
          command: |
            apk add --no-cache --update py-pip
            pip install awscli
      - run:
          name: login ecr
          command: |
            $(aws ecr get-login --no-include-email --region ap-northeast-1)
      - run:
          name: build image
          command: |
            docker build -t ${ECR_DOMAIN}:$CIRCLE_SHA1 -t ${ECR_DOMAIN}:latest .
      - run:
          name: Push docker image
          command: |
            docker push ${ECR_DOMAIN}:$CIRCLE_SHA1
            docker push ${ECR_DOMAIN}:latest
  deploy:
    docker:
      - image: circleci/python:3.7
    steps:
      - run:
          name: install aws cli
          command: |
            sudo pip install awscli
      - run:
          name: download jq
          command: |
            wget https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
            mv jq-linux64 jq
      - run:
          name: login
          command: |
            $(aws ecr get-login --no-include-email --region us-east-1)
      - run:
          name: deploy
          command: |
            aws ecs describe-task-definition --task-definition shareinfo-service | jq '.taskDefinition | { containerDefinitions: .containerDefinitions }' > definition.json
            aws ecs register-task-definition --execution-role-arn arn:aws:iam::375448896084:role/ecs-task-role --family shareinfo-service --cli-input-json file://definition.json
            aws ecs update-service --cluster shareinfo-ecs-cluster --service shareinfo-service --task-definition shareinfo-service
      - run:
          name: migration
          command: |
            aws ecs run-task --cluster shareinfo-ecs-cluster --task-definition shareinfo-migrate
workflows:
  version: 2
  test:
    jobs:
      - build
      - build_image:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - build_image
          filters:
            branches:
              only: master
